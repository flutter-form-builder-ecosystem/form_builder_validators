{
  "@@locale": "it",
  "notMatchErrorText": "Il valore non deve corrispondere al pattern",
  "satisfyErrorText": "Il valore non soddisfa la condizione.",
  "andSeparator": " e ",
  "betweenLengthErrorText": "Il valore deve avere una lunghezza compresa tra {min} e {max}, inclusi.",
  "@betweenLengthErrorText": {
    "placeholders": {
      "min": {
        "type": "int",
        "description": "The minimum length allowed"
      },
      "max": {
        "type": "int",
        "description": "The maximum length allowed"
      }
    }
  },
  "creditCardErrorText": "Questo campo richiede un numero di carta di credito valido.",
  "dateStringErrorText": "Questo campo richiede una data valida.",
  "emailErrorText": "Questo campo richiede un indirizzo email valido.",
  "equalErrorText": "Il valore di questo campo deve essere uguale a {value}.",
  "equalLengthErrorText": "Il valore deve avere una lunghezza uguale a {length}.",
  "integerErrorText": "Il valore deve essere un numero intero.",
  "ipErrorText": "Questo campo richiede un indirizzo IP valido.",
  "matchErrorText": "Il valore non corrisponde al formato richiesto.",
  "maxErrorText": "Il valore inserito deve essere minore o uguale a {max}.",
  "maxLengthErrorText": "Il valore inserito deve avere una lunghezza minore o uguale a {maxLength}.",
  "maxWordsCountErrorText": "Il valore deve avere un conteggio di parole inferiore o uguale a {maxWordsCount}.",
  "minErrorText": "Il valore inserito deve essere maggiore o uguale a {min}.",
  "minLengthErrorText": "Il valore inserito deve avere una lunghezza maggiore o uguale a {minLength}.",
  "minWordsCountErrorText": "Il valore deve avere un conteggio di parole maggiore o uguale a {minWordsCount}.",
  "notEqualErrorText": "Questo valore di campo non deve essere uguale a {value}.",
  "numericErrorText": "Il valore deve essere numerico.",
  "requiredErrorText": "Questo campo non può essere vuoto.",
  "urlErrorText": "Questo campo richiede una URL valida.",
  "phoneErrorText": "Questo campo richiede un numero di telefono valido.",
  "creditCardExpirationDateErrorText": "Questo campo richiede una data di scadenza della carta di credito valida.",
  "creditCardExpiredErrorText": "La carta di credito è scaduta.",
  "creditCardCVCErrorText": "Questo campo richiede un codice CVC della carta di credito valido.",
  "colorCodeErrorText": "Questo campo richiede un codice colore valido.",
  "uppercaseErrorText": "Questo campo richiede lettere maiuscole.",
  "lowercaseErrorText": "Questo campo richiede lettere minuscole.",
  "fileExtensionErrorText": "Questo campo richiede un'estensione del file valida.",
  "fileSizeErrorText": "Questo file supera la dimensione massima consentita.",
  "dateRangeErrorText": "La data deve essere compresa nell'intervallo consentito.",
  "mustBeTrueErrorText": "Questo campo deve essere vero.",
  "mustBeFalseErrorText": "Questo campo deve essere falso.",
  "containsSpecialCharErrorText": "Questo campo deve contenere un carattere speciale.",
  "containsUppercaseCharErrorText": "Questo campo deve contenere una lettera maiuscola.",
  "containsLowercaseCharErrorText": "Questo campo deve contenere una lettera minuscola.",
  "containsNumberErrorText": "Questo campo deve contenere un numero.",
  "alphabeticalErrorText": "Questo campo deve contenere solo lettere.",
  "uuidErrorText": "Questo campo richiede un UUID valido.",
  "jsonErrorText": "Questo campo richiede un JSON valido.",
  "latitudeErrorText": "Questo campo richiede una latitudine valida.",
  "longitudeErrorText": "Questo campo richiede una longitudine valida.",
  "base64ErrorText": "Questo campo richiede una stringa Base64 valida.",
  "pathErrorText": "Questo campo richiede un percorso valido.",
  "oddNumberErrorText": "Questo campo richiede un numero dispari.",
  "evenNumberErrorText": "Questo campo richiede un numero pari.",
  "portNumberErrorText": "Questo campo richiede un numero di porta valido.",
  "macAddressErrorText": "Questo campo richiede un indirizzo MAC valido.",
  "startsWithErrorText": "Il valore deve iniziare con {value}.",
  "endsWithErrorText": "Il valore deve terminare con {value}.",
  "containsErrorText": "Il valore deve contenere {value}.",
  "betweenErrorText": "Il valore deve essere compreso tra {min} e {max}.",
  "containsElementErrorText": "Il valore deve essere presente nell'elenco dei valori consentiti.",
  "doesNotContainElementErrorText": "Il valore non può essere nell'elenco.",
  "ibanErrorText": "Questo campo richiede un IBAN valido.",
  "uniqueErrorText": "Questo campo richiede un valore unico.",
  "bicErrorText": "Questo campo richiede un codice BIC valido.",
  "isbnErrorText": "Questo campo richiede un ISBN valido.",
  "singleLineErrorText": "Questo campo richiede un testo su una sola riga.",
  "timeErrorText": "Questo campo richiede un orario valido.",
  "dateMustBeInTheFutureErrorText": "La data deve essere nel futuro.",
  "dateMustBeInThePastErrorText": "La data deve essere nel passato.",
  "fileNameErrorText": "Il valore deve essere un nome file valido.",
  "negativeNumberErrorText": "Il valore deve essere un numero negativo.",
  "positiveNumberErrorText": "Il valore deve essere un numero positivo.",
  "notZeroNumberErrorText": "Il valore non deve essere zero.",
  "ssnErrorText": "Il valore deve essere un numero di previdenza sociale valido.",
  "zipCodeErrorText": "Il valore deve essere un codice postale valido.",
  "usernameErrorText": "Il valore deve essere un nome utente valido.",
  "usernameCannotContainNumbersErrorText": "Il nome utente non può contenere numeri.",
  "usernameCannotContainUnderscoreErrorText": "Il nome utente non può contenere underscore.",
  "usernameCannotContainSpecialCharErrorText": "Il nome utente non può contenere caratteri speciali.",
  "usernameCannotContainSpacesErrorText": "Il nome utente non può contenere spazi.",
  "usernameCannotContainDotsErrorText": "Il nome utente non può contenere punti.",
  "usernameCannotContainDashesErrorText": "Il nome utente non può contenere trattini.",
  "invalidMimeTypeErrorText": "Tipo mime non valido.",
  "timezoneErrorText": "Il valore deve essere un fuso orario valido.",
  "cityErrorText": "Il valore deve essere un nome di città valido.",
  "countryErrorText": "Il valore deve essere un paese valido.",
  "stateErrorText": "Il valore deve essere uno stato valido.",
  "streetErrorText": "Il valore deve essere un nome di via valido.",
  "firstNameErrorText": "Il valore deve essere un nome valido.",
  "lastNameErrorText": "Il valore deve essere un cognome valido.",
  "passportNumberErrorText": "Il valore deve essere un numero di passaporto valido.",
  "primeNumberErrorText": "Il valore deve essere un numero primo.",
  "dunsErrorText": "Il valore deve essere un numero DUNS valido.",
  "licensePlateErrorText": "Il valore deve essere una targa valida.",
  "vinErrorText": "Il valore deve essere un VIN valido.",
  "languageCodeErrorText": "Il valore deve essere un codice lingua valido.",
  "floatErrorText": "Il valore deve essere un numero in virgola mobile valido.",
  "hexadecimalErrorText": "Il valore deve essere un numero esadecimale valido.",
  "betweenNumErrorText": "Il valore deve essere {minInclusive, select, true{maggiore o uguale a} other{maggiore di}} {min} e {maxInclusive, select, true{minore o uguale a} other{minore di}} {max}",
  "@betweenNumErrorText": {
    "description": "Error text when a value must be within a specific range",
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum allowed value"
      },
      "max": {
        "type": "num",
        "description": "The maximum allowed value"
      },
      "minInclusive": {
        "type": "String",
        "description": "Whether the minimum bound is inclusive"
      },
      "maxInclusive": {
        "type": "String",
        "description": "Whether the maximum bound is inclusive"
      }
    }
  },
  "booleanErrorText": "Questo campo richiede un valore booleano valido (vero o falso).",
  "dateMustBeAfterErrorText": "La data deve essere successiva a {reference}.",
  "@dateMustBeAfterErrorText": {
    "placeholders": {
      "reference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The minimum date allowed"
      }
    }
  },
  "dateMustBeBeforeErrorText": "La data deve essere precedente a {reference}.",
  "@dateMustBeBeforeErrorText": {
    "placeholders": {
      "reference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The maximum date allowed"
      }
    }
  },
  "dateMustBeBetweenErrorText": "La data deve essere compresa tra {minReference} e {maxReference}.",
  "@dateMustBeBetweenErrorText": {
    "placeholders": {
      "minReference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The minimum date allowed"
      },
      "maxReference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The maximum date allowed"
      }
    }
  },
  "dateTimeErrorText": "Questo campo richiede una data e ora valida.",
  "greaterThanErrorText": "Il valore deve essere maggiore di {min}.",
  "@greaterThanErrorText": {
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum value allowed"
      }
    }
  },
  "greaterThanOrEqualToErrorText": "Il valore deve essere maggiore o uguale a {min}.",
  "@greaterThanOrEqualToErrorText": {
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum value allowed"
      }
    }
  },
  "isOptionalErrorText": "Il campo è opzionale, altrimenti, {nextErrorMessage}",
  "@isOptionalErrorText": {
    "placeholders": {
      "nextErrorMessage": {
        "type": "String",
        "description": "The error text from the next validator."
      }
    }
  },
  "isStringErrorText": "Questo campo richiede una stringa valida.",
  "lessThanErrorText": "Il valore deve essere minore di {max}.",
  "@lessThanErrorText": {
    "placeholders": {
      "max": {
        "type": "num",
        "description": "The maximum value allowed"
      }
    }
  },
  "lessThanOrEqualToErrorText": "Il valore deve essere minore o uguale a {max}.",
  "@lessThanOrEqualToErrorText": {
    "placeholders": {
      "max": {
        "type": "num",
        "description": "The maximum value allowed"
      }
    }
  },
  "orSeparator": " o ",
  "transformAndValidateErrorTextV1": "Il valore non può essere trasformato.",
  "transformAndValidateErrorTextV2": "Il valore deve essere un {transformedResultTypeDescription} valido.",
  "@transformAndValidateErrorTextV2": {
    "placeholders": {
      "transformedResultTypeDescription": {
        "type": "String",
        "description": "A description for the expected transformed type."
      }
    }
  }
}