{
  "@@locale": "de",
  "notMatchErrorText": "Der Wert darf nicht dem Muster entsprechen",
  "satisfyErrorText": "Der Wert erfüllt die Bedingung nicht.",
  "andSeparator": " und ",
  "betweenLengthErrorText": "Der Wert muss eine Länge zwischen {min} und {max} haben, einschließlich.",
  "@betweenLengthErrorText": {
    "placeholders": {
      "min": {
        "type": "int",
        "description": "The minimum length allowed"
      },
      "max": {
        "type": "int",
        "description": "The maximum length allowed"
      }
    }
  },
  "creditCardErrorText": "Für dieses Feld ist eine gültige Kreditkartennummer erforderlich.",
  "dateStringErrorText": "Dieses Feld erfordert ein gültiges Datum.",
  "emailErrorText": "Für dieses Feld ist eine gültige E-Mail-Adresse erforderlich.",
  "equalErrorText": "Dieser Feldwert muss gleich {value} sein.",
  "equalLengthErrorText": "Der Wert muss eine Länge von {length} haben.",
  "integerErrorText": "Der Wert muss eine ganze Zahl sein.",
  "ipErrorText": "Dieses Feld erfordert eine gültige IP-Adresse.",
  "matchErrorText": "Der Wert stimmt nicht mit dem Muster überein.",
  "maxErrorText": "Der Wert muss kleiner oder gleich {max} sein.",
  "maxLengthErrorText": "Der Wert muss eine Länge haben, die kleiner oder gleich {maxLength} ist.",
  "maxWordsCountErrorText": "Der Wert muss eine Wortanzahl haben, die kleiner oder gleich {maxWordsCount} ist.",
  "minErrorText": "Der Wert muss größer oder gleich {min} sein.",
  "minLengthErrorText": "Der Wert muss eine Länge haben, die größer oder gleich {minLength} ist.",
  "minWordsCountErrorText": "Der Wert muss eine Wortanzahl haben, die größer oder gleich {minWordsCount} ist.",
  "notEqualErrorText": "Dieser Feldwert darf nicht gleich {value} sein.",
  "numericErrorText": "Der Wert muss numerisch sein.",
  "requiredErrorText": "Dieses Feld darf nicht leer sein.",
  "urlErrorText": "Für dieses Feld ist eine gültige URL-Adresse erforderlich.",
  "phoneErrorText": "Dieses Feld erfordert eine gültige Telefonnummer.",
  "creditCardExpirationDateErrorText": "Dieses Feld erfordert ein gültiges Ablaufdatum der Kreditkarte.",
  "creditCardExpiredErrorText": "Die Kreditkarte ist abgelaufen.",
  "creditCardCVCErrorText": "Dieses Feld erfordert einen gültigen CVC-Code der Kreditkarte.",
  "colorCodeErrorText": "Dieses Feld erfordert einen gültigen Farbcode.",
  "uppercaseErrorText": "Dieses Feld erfordert Großbuchstaben.",
  "lowercaseErrorText": "Dieses Feld erfordert Kleinbuchstaben.",
  "fileExtensionErrorText": "Dieses Feld erfordert eine gültige Dateierweiterung.",
  "fileSizeErrorText": "Diese Datei überschreitet die maximal zulässige Größe.",
  "dateRangeErrorText": "Das Datum muss im erlaubten Bereich liegen.",
  "mustBeTrueErrorText": "Dieses Feld muss wahr sein.",
  "mustBeFalseErrorText": "Dieses Feld muss falsch sein.",
  "containsSpecialCharErrorText": "Dieses Feld muss ein Sonderzeichen enthalten.",
  "containsUppercaseCharErrorText": "Dieses Feld muss einen Großbuchstaben enthalten.",
  "containsLowercaseCharErrorText": "Dieses Feld muss einen Kleinbuchstaben enthalten.",
  "containsNumberErrorText": "Dieses Feld muss eine Zahl enthalten.",
  "alphabeticalErrorText": "Dieses Feld darf nur Buchstaben enthalten.",
  "uuidErrorText": "Dieses Feld erfordert eine gültige UUID.",
  "jsonErrorText": "Dieses Feld erfordert ein gültiges JSON.",
  "latitudeErrorText": "Dieses Feld erfordert einen gültigen Breitengrad.",
  "longitudeErrorText": "Dieses Feld erfordert einen gültigen Längengrad.",
  "base64ErrorText": "Dieses Feld erfordert eine gültige Base64-Zeichenkette.",
  "pathErrorText": "Dieses Feld erfordert einen gültigen Pfad.",
  "oddNumberErrorText": "Dieses Feld erfordert eine ungerade Zahl.",
  "evenNumberErrorText": "Dieses Feld erfordert eine gerade Zahl.",
  "portNumberErrorText": "Dieses Feld erfordert eine gültige Portnummer.",
  "macAddressErrorText": "Dieses Feld erfordert eine gültige MAC-Adresse.",
  "startsWithErrorText": "Der Wert muss mit {value} beginnen.",
  "endsWithErrorText": "Der Wert muss mit {value} enden.",
  "containsErrorText": "Der Wert muss {value} enthalten.",
  "betweenErrorText": "Der Wert muss zwischen {min} und {max} liegen.",
  "containsElementErrorText": "Der Wert muss in der Liste der zulässigen Werte sein.",
  "doesNotContainElementErrorText": "Wert darf nicht in der Liste enthalten sein.",
  "ibanErrorText": "Dieses Feld erfordert eine gültige IBAN.",
  "uniqueErrorText": "Dieses Feld erfordert einen eindeutigen Wert.",
  "bicErrorText": "Dieses Feld erfordert eine gültige BIC.",
  "isbnErrorText": "Dieses Feld erfordert eine gültige ISBN.",
  "singleLineErrorText": "Dieses Feld darf keine Zeilenumbrüche enthalten.",
  "timeErrorText": "Dieses Feld erfordert eine gültige Uhrzeit.",
  "dateMustBeInTheFutureErrorText": "Datum muss in der Zukunft liegen.",
  "dateMustBeInThePastErrorText": "Datum muss in der Vergangenheit liegen.",
  "fileNameErrorText": "Wert muss ein gültiger Dateiname sein.",
  "negativeNumberErrorText": "Wert muss eine negative Zahl sein.",
  "positiveNumberErrorText": "Wert muss eine positive Zahl sein.",
  "notZeroNumberErrorText": "Wert darf nicht null sein.",
  "ssnErrorText": "Wert muss eine gültige Sozialversicherungsnummer sein.",
  "zipCodeErrorText": "Wert muss eine gültige Postleitzahl sein.",
  "usernameErrorText": "Der Wert muss ein gültiger Benutzername sein.",
  "usernameCannotContainNumbersErrorText": "Der Benutzername darf keine Zahlen enthalten.",
  "usernameCannotContainUnderscoreErrorText": "Der Benutzername darf keinen Unterstrich enthalten.",
  "usernameCannotContainSpecialCharErrorText": "Der Benutzername darf keine Sonderzeichen enthalten.",
  "usernameCannotContainSpacesErrorText": "Der Benutzername darf keine Leerzeichen enthalten.",
  "usernameCannotContainDotsErrorText": "Der Benutzername darf keine Punkte enthalten.",
  "usernameCannotContainDashesErrorText": "Der Benutzername darf keine Bindestriche enthalten.",
  "invalidMimeTypeErrorText": "Ungültiger MIME-Typ.",
  "timezoneErrorText": "Der Wert muss eine gültige Zeitzone sein.",
  "cityErrorText": "Der Wert muss ein gültiger Stadtname sein.",
  "countryErrorText": "Der Wert muss ein gültiges Land sein.",
  "stateErrorText": "Der Wert muss ein gültiger Bundesstaat sein.",
  "streetErrorText": "Der Wert muss ein gültiger Straßenname sein.",
  "firstNameErrorText": "Der Wert muss ein gültiger Vorname sein.",
  "lastNameErrorText": "Der Wert muss ein gültiger Nachname sein.",
  "passportNumberErrorText": "Der Wert muss eine gültige Passnummer sein.",
  "primeNumberErrorText": "Der Wert muss eine Primzahl sein.",
  "dunsErrorText": "Der Wert muss eine gültige DUNS-Nummer sein.",
  "licensePlateErrorText": "Der Wert muss ein gültiges Nummernschild sein.",
  "vinErrorText": "Der Wert muss eine gültige Fahrzeug-Identifizierungsnummer (VIN) sein.",
  "languageCodeErrorText": "Der Wert muss ein gültiger Sprachcode sein.",
  "floatErrorText": "Der Wert muss eine gültige Fließkommazahl sein.",
  "hexadecimalErrorText": "Der Wert muss eine gültige hexadezimale Zahl sein.",
  "betweenNumErrorText": "Der Wert muss {minInclusive, select, true{größer oder gleich} other{größer als}} {min} und {maxInclusive, select, true{kleiner oder gleich} other{kleiner als}} {max} sein",
  "@betweenNumErrorText": {
    "description": "Error text when a value must be within a specific range",
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum allowed value"
      },
      "max": {
        "type": "num",
        "description": "The maximum allowed value"
      },
      "minInclusive": {
        "type": "String",
        "description": "Whether the minimum bound is inclusive"
      },
      "maxInclusive": {
        "type": "String",
        "description": "Whether the maximum bound is inclusive"
      }
    }
  },
  "booleanErrorText": "Dieses Feld erfordert einen gültigen booleschen Wert (true oder false).",
  "dateMustBeAfterErrorText": "Das Datum muss nach {reference} liegen.",
  "@dateMustBeAfterErrorText": {
    "placeholders": {
      "reference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The minimum date allowed"
      }
    }
  },
  "dateMustBeBeforeErrorText": "Das Datum muss vor {reference} liegen.",
  "@dateMustBeBeforeErrorText": {
    "placeholders": {
      "reference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The maximum date allowed"
      }
    }
  },
  "dateMustBeBetweenErrorText": "Das Datum muss zwischen {minReference} und {maxReference} liegen.",
  "@dateMustBeBetweenErrorText": {
    "placeholders": {
      "minReference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The minimum date allowed"
      },
      "maxReference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The maximum date allowed"
      }
    }
  },
  "dateTimeErrorText": "Dieses Feld erfordert eine gültige Datums- und Zeitangabe.",
  "greaterThanErrorText": "Der Wert muss größer als {min} sein.",
  "@greaterThanErrorText": {
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum value allowed"
      }
    }
  },
  "greaterThanOrEqualToErrorText": "Der Wert muss größer oder gleich {min} sein.",
  "@greaterThanOrEqualToErrorText": {
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum value allowed"
      }
    }
  },
  "isOptionalErrorText": "Das Feld ist optional, andernfalls {nextErrorMessage}",
  "@isOptionalErrorText": {
    "placeholders": {
      "nextErrorMessage": {
        "type": "String",
        "description": "The error text from the next validator."
      }
    }
  },
  "isStringErrorText": "Dieses Feld erfordert eine gültige Zeichenkette.",
  "lessThanErrorText": "Der Wert muss kleiner als {max} sein.",
  "@lessThanErrorText": {
    "placeholders": {
      "max": {
        "type": "num",
        "description": "The maximum value allowed"
      }
    }
  },
  "lessThanOrEqualToErrorText": "Der Wert muss kleiner oder gleich {max} sein.",
  "@lessThanOrEqualToErrorText": {
    "placeholders": {
      "max": {
        "type": "num",
        "description": "The maximum value allowed"
      }
    }
  },
  "orSeparator": " oder ",
  "transformAndValidateErrorTextV1": "Der Wert kann nicht transformiert werden.",
  "transformAndValidateErrorTextV2": "Der Wert muss ein gültiger {transformedResultTypeDescription} sein.",
  "@transformAndValidateErrorTextV2": {
    "placeholders": {
      "transformedResultTypeDescription": {
        "type": "String",
        "description": "A description for the expected transformed type."
      }
    }
  }
}