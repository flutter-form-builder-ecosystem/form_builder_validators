{
  "@@locale": "ru",
  "notMatchErrorText": "Значение не должно соответствовать шаблону",
  "satisfyErrorText": "Значение не удовлетворяет условию.",
  "andSeparator": " и ",
  "betweenLengthErrorText": "Значение должно иметь длину от {min} до {max} включительно.",
  "@betweenLengthErrorText": {
    "placeholders": {
      "min": {
        "type": "int",
        "description": "The minimum length allowed"
      },
      "max": {
        "type": "int",
        "description": "The maximum length allowed"
      }
    }
  },
  "creditCardErrorText": "Значение поля должно быть номером кредитной карты.",
  "dateStringErrorText": "Поле должно быть датой.",
  "emailErrorText": "Поле должно быть email адресом.",
  "equalErrorText": "Значение поля должно быть равно {value}.",
  "equalLengthErrorText": "Значение должно иметь длину, равную {length}.",
  "integerErrorText": "Поле должно быть целым числом.",
  "ipErrorText": "Поле должно быть IP адресом.",
  "matchErrorText": "Значение должно удовлетворять шаблону.",
  "maxErrorText": "Значение должно быть меньше или равно {max}.",
  "maxLengthErrorText": "Длина значения должна быть меньше или равна {maxLength}.",
  "maxWordsCountErrorText": "Значение должно иметь количество слов, меньшее или равное {maxWordsCount}.",
  "minErrorText": "Значение должно быть больше или равно {min}.",
  "minLengthErrorText": "Длина значения должна быть больше или равна {minLength}.",
  "minWordsCountErrorText": "Значение должно иметь количество слов, большее или равное {minWordsCount}.",
  "notEqualErrorText": "Значение поля не должно быть равно {value}.",
  "numericErrorText": "Значение должно быть числом.",
  "requiredErrorText": "Поле не может быть пустым.",
  "urlErrorText": "Поле должно быть URL адресом.",
  "phoneErrorText": "Поле должно быть номером телефона.",
  "creditCardExpirationDateErrorText": "Поле должно быть действительной датой истечения срока действия кредитной карты.",
  "creditCardExpiredErrorText": "Срок действия кредитной карты истек.",
  "creditCardCVCErrorText": "Поле должно быть действительным CVC кодом кредитной карты.",
  "colorCodeErrorText": "Поле должно быть действительным цветовым кодом.",
  "uppercaseErrorText": "Поле должно содержать заглавные буквы.",
  "lowercaseErrorText": "Поле должно содержать строчные буквы.",
  "fileExtensionErrorText": "Поле должно быть действительным расширением файла.",
  "fileSizeErrorText": "Файл превышает максимально допустимый размер.",
  "dateRangeErrorText": "Дата должна быть в допустимом диапазоне.",
  "mustBeTrueErrorText": "Поле должно быть истинным.",
  "mustBeFalseErrorText": "Поле должно быть ложным.",
  "containsSpecialCharErrorText": "Поле должно содержать специальный символ.",
  "containsUppercaseCharErrorText": "Поле должно содержать заглавные буквы.",
  "containsLowercaseCharErrorText": "Поле должно содержать строчные буквы.",
  "containsNumberErrorText": "Поле должно содержать цифры.",
  "alphabeticalErrorText": "Поле должно содержать только буквы.",
  "uuidErrorText": "Поле должно быть действительным UUID.",
  "jsonErrorText": "Поле должно быть действительным JSON.",
  "latitudeErrorText": "Поле должно быть действительной широтой.",
  "longitudeErrorText": "Поле должно быть действительной долготой.",
  "base64ErrorText": "Поле должно быть действительной строкой Base64.",
  "pathErrorText": "Поле должно быть действительным путем.",
  "oddNumberErrorText": "Поле должно быть нечетным числом.",
  "evenNumberErrorText": "Поле должно быть четным числом.",
  "portNumberErrorText": "Поле должно быть действительным номером порта.",
  "macAddressErrorText": "Поле должно быть действительным MAC адресом.",
  "startsWithErrorText": "Значение должно начинаться с {value}.",
  "endsWithErrorText": "Значение должно заканчиваться на {value}.",
  "containsErrorText": "Значение должно содержать {value}.",
  "betweenErrorText": "Значение должно быть между {min} и {max}.",
  "containsElementErrorText": "Значение должно быть в списке допустимых значений.",
  "doesNotContainElementErrorText": "Значение не может быть в списке.",
  "ibanErrorText": "Поле должно быть действительным IBAN номером.",
  "uniqueErrorText": "Поле должно быть уникальным.",
  "bicErrorText": "Поле должно быть действительным BIC кодом.",
  "isbnErrorText": "Поле должно быть действительным ISBN номером.",
  "singleLineErrorText": "Поле должно содержать только одну строку.",
  "timeErrorText": "Поле должно быть действительным временем.",
  "dateMustBeInTheFutureErrorText": "Дата должна быть в будущем.",
  "dateMustBeInThePastErrorText": "Дата должна быть в прошлом.",
  "fileNameErrorText": "Значение должно быть допустимым именем файла.",
  "negativeNumberErrorText": "Значение должно быть отрицательным числом.",
  "positiveNumberErrorText": "Значение должно быть положительным числом.",
  "notZeroNumberErrorText": "Значение не должно быть нулевым.",
  "ssnErrorText": "Значение должно быть действительным номером социального страхования.",
  "zipCodeErrorText": "Значение должно быть допустимым почтовым индексом.",
  "usernameErrorText": "Значение должно быть допустимым именем пользователя.",
  "usernameCannotContainNumbersErrorText": "Имя пользователя не может содержать цифры.",
  "usernameCannotContainUnderscoreErrorText": "Имя пользователя не может содержать символ подчеркивания.",
  "usernameCannotContainSpecialCharErrorText": "Имя пользователя не может содержать специальные символы.",
  "usernameCannotContainSpacesErrorText": "Имя пользователя не может содержать пробелы.",
  "usernameCannotContainDotsErrorText": "Имя пользователя не может содержать точки.",
  "usernameCannotContainDashesErrorText": "Имя пользователя не может содержать дефисы.",
  "invalidMimeTypeErrorText": "Неверный MIME-тип.",
  "timezoneErrorText": "Значение должно быть действительным часовым поясом.",
  "cityErrorText": "Значение должно быть действительным названием города.",
  "countryErrorText": "Значение должно быть действительным названием страны.",
  "stateErrorText": "Значение должно быть действительным названием штата.",
  "streetErrorText": "Значение должно быть действительным названием улицы.",
  "firstNameErrorText": "Значение должно быть действительным именем.",
  "lastNameErrorText": "Значение должно быть действительной фамилией.",
  "passportNumberErrorText": "Значение должно быть действительным номером паспорта.",
  "primeNumberErrorText": "Значение должно быть простым числом.",
  "dunsErrorText": "Значение должно быть действительным номером DUNS.",
  "licensePlateErrorText": "Значение должно быть действительным номером номерного знака.",
  "vinErrorText": "Значение должно быть действительным VIN.",
  "languageCodeErrorText": "Значение должно быть действительным кодом языка.",
  "floatErrorText": "Значение должно быть допустимым числом с плавающей запятой.",
  "hexadecimalErrorText": "Значение должно быть допустимым шестнадцатеричным числом.",
  "betweenNumErrorText": "Значение должно быть {minInclusive, select, true{больше или равно} other{больше}} {min} и {maxInclusive, select, true{меньше или равно} other{меньше}} {max}",
  "@betweenNumErrorText": {
    "description": "Error text when a value must be within a specific range",
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum allowed value"
      },
      "max": {
        "type": "num",
        "description": "The maximum allowed value"
      },
      "minInclusive": {
        "type": "String",
        "description": "Whether the minimum bound is inclusive"
      },
      "maxInclusive": {
        "type": "String",
        "description": "Whether the maximum bound is inclusive"
      }
    }
  },
  "booleanErrorText": "Это поле требует допустимое логическое значение (true или false)",
  "dateMustBeAfterErrorText": "Дата должна быть после {reference}",
  "@dateMustBeAfterErrorText": {
    "placeholders": {
      "reference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The minimum date allowed"
      }
    }
  },
  "dateMustBeBeforeErrorText": "Дата должна быть до {reference}",
  "@dateMustBeBeforeErrorText": {
    "placeholders": {
      "reference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The maximum date allowed"
      }
    }
  },
  "dateMustBeBetweenErrorText": "Дата должна быть между {minReference} и {maxReference}",
  "@dateMustBeBetweenErrorText": {
    "placeholders": {
      "minReference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The minimum date allowed"
      },
      "maxReference": {
        "type": "DateTime",
        "format": "yMd",
        "example": "11/10/2021",
        "description": "The maximum date allowed"
      }
    }
  },
  "dateTimeErrorText": "Это поле требует действительную дату и время",
  "greaterThanErrorText": "Значение должно быть больше {min}",
  "@greaterThanErrorText": {
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum value allowed"
      }
    }
  },
  "greaterThanOrEqualToErrorText": "Значение должно быть больше или равно {min}",
  "@greaterThanOrEqualToErrorText": {
    "placeholders": {
      "min": {
        "type": "num",
        "description": "The minimum value allowed"
      }
    }
  },
  "isOptionalErrorText": "Поле является необязательным, в противном случае {nextErrorMessage}",
  "@isOptionalErrorText": {
    "placeholders": {
      "nextErrorMessage": {
        "type": "String",
        "description": "The error text from the next validator."
      }
    }
  },
  "isStringErrorText": "Это поле требует действительную строку",
  "lessThanErrorText": "Значение должно быть меньше {max}",
  "@lessThanErrorText": {
    "placeholders": {
      "max": {
        "type": "num",
        "description": "The maximum value allowed"
      }
    }
  },
  "lessThanOrEqualToErrorText": "Значение должно быть меньше или равно {max}",
  "@lessThanOrEqualToErrorText": {
    "placeholders": {
      "max": {
        "type": "num",
        "description": "The maximum value allowed"
      }
    }
  },
  "orSeparator": " или ",
  "transformAndValidateErrorTextV1": "Значение не может быть преобразовано",
  "transformAndValidateErrorTextV2": "Значение должно быть допустимым {transformedResultTypeDescription}",
  "@transformAndValidateErrorTextV2": {
    "placeholders": {
      "transformedResultTypeDescription": {
        "type": "String",
        "description": "A description for the expected transformed type."
      }
    }
  }
}